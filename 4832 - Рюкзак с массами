#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

void print(vector<vector<int>>& dp, vector<int>& weights_and_costs, int s, int n) {
    vector<int> res;
    int i = n/2;
    int j = s;
    while(i > 0 && j > 0) {
        if(dp[i][j] != dp[i-1][j]) {
            res.push_back(i);
            j -= weights_and_costs[i];
        }
        i--;
    }
    
    for (int i = res.size() - 1; i>=0;--i){
        cout << res[i] << endl;
    }
}
void f(vector<vector<int>>& dp, 
 vector<int>& weights_and_costs, int s, int n) {
    for(int i = 1; i <= n/2; i++) {
        for(int j = 1; j <= s; j++) {
            if(weights_and_costs[i] > j) {
                dp[i][j] = dp[i-1][j];
            } else {
                dp[i][j] = max(dp[i-1][j], dp[i-1][j-weights_and_costs[i]] + weights_and_costs[i + n/2]);
            }
        }
    }
    print(dp, weights_and_costs, s, n);
}

int main()
{
    vector<int> weights_and_costs;
    weights_and_costs.push_back(0);
    int s, w, n = 0;
    cin >> s;
    
    while(cin >> w)
    {
        n++;
        weights_and_costs.push_back(w);
    }
    
    vector<vector<int>> dp(n/2 + 1, vector<int>(s + 1, 0));
    
    f(dp, weights_and_costs, s, n);
    
    return 0;
}
