#include <bits/stdc++.h>
#include <algorithm>
using namespace std;

int f(string& a, string& b, vector<vector<int>>& dp){
    int n = a.size(), m = b.size();
    for (int i = 1; i <= n; ++i){
        for (int j = 1; j <= m; ++j){
            if (a[i - 1] == b[j - 1]) dp[i][j] = 1 + dp[i - 1][j - 1];
            else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
        }
    }
    return dp[n][m];
}

int main(){
    string a, b;
    cin >> a;
    cin >> b;
    int n = a.size(), m = b.size();
    vector<vector<int>> dp(n + 1, vector<int> (m + 1, 0));
    int len = f(a, b, dp);
    int indx = len - 1, i = n, j = m;
    string commonStr;
    
    while (i > 0 && j > 0){
        if (a[i - 1] == b[j - 1]){
            commonStr = a[i - 1] + commonStr;
            indx--;
            i--;
            j--;
        }else if (dp[i - 1][j] > dp[i][j - 1]){
            i--;
        }else{
            j--;
        }
    }
    cout << commonStr;

    return 0;
}
